@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun EmptyListCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(2013592037)
  sourceInformation($composer, "C(EmptyListCallDemo)28@1177L33,30@1214L589:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(2013592037, $changed, -1, "boo.kodeeverse.composemagic.stability.EmptyListCallDemo (KnownStableCallArguments.kt:27)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1968301594, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1373854025, "C35@1386L31,40@1537L11,36@1422L253,45@1680L53,47@1739L60:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT emptyList", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -182860774, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(emptyList()), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    EmptyListCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun ListOfCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(26317311)
  sourceInformation($composer, "C(ListOfCallDemo)52@1857L33,54@1894L578:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(26317311, $changed, -1, "boo.kodeeverse.composemagic.stability.ListOfCallDemo (KnownStableCallArguments.kt:51)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -478866656, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 2055276508, "C59@2066L28,64@2214L11,60@2099L253,69@2357L53,71@2416L52:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT listOf", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1036134912, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(listOf(1, 2)), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    ListOfCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun EmptyMapCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(2041728261)
  sourceInformation($composer, "C(EmptyMapCallDemo)76@2528L33,78@2565L596:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(2041728261, $changed, -1, "boo.kodeeverse.composemagic.stability.EmptyMapCallDemo (KnownStableCallArguments.kt:75)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -699194138, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 1585233604, "C83@2737L30,88@2887L11,84@2772L253,93@3030L53,95@3089L68:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT emptyMap", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -780143034, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(emptyMap()), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    EmptyMapCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun MapOfCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1436424931)
  sourceInformation($composer, "C(MapOfCallDemo)100@3214L33,102@3251L588:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1436424931, $changed, -1, "boo.kodeeverse.composemagic.stability.MapOfCallDemo (KnownStableCallArguments.kt:99)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1719855458, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -260932768, "C107@3423L27,112@3570L11,108@3455L253,117@3713L53,119@3772L63:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT mapOf", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1238513106, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(mapOf(1 to 1.0f, 2 to 2.0f)), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    MapOfCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun EmptySetCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1829189823)
  sourceInformation($composer, "C(EmptySetCallDemo)124@3895L33,126@3932L587:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1829189823, $changed, -1, "boo.kodeeverse.composemagic.stability.EmptySetCallDemo (KnownStableCallArguments.kt:123)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 1209797152, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 634421171, "C131@4104L30,136@4254L11,132@4139L253,141@4397L53,143@4456L59:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT emptySet", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1128848256, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(emptySet()), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    EmptySetCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun SetOfCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(472566359)
  sourceInformation($composer, "C(SetOfCallDemo)148@4572L33,150@4609L576:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(472566359, $changed, -1, "boo.kodeeverse.composemagic.stability.SetOfCallDemo (KnownStableCallArguments.kt:147)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1130261160, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 836620914, "C155@4781L27,160@4928L11,156@4813L253,165@5071L53,167@5130L51:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT setOf", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1828107404, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(setOf(1, 2)), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    SetOfCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun PairOfCallDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(766130755)
  sourceInformation($composer, "C(PairOfCallDemo)172@5239L33,174@5276L570:KnownStableCallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(766130755, $changed, -1, "boo.kodeeverse.composemagic.stability.PairOfCallDemo (KnownStableCallArguments.kt:171)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 1812249188, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 65423392, "C179@5448L26,184@5594L11,180@5479L253,189@5737L53,191@5796L46:KnownStableCallArguments.kt#b558il")
      CurrentMsText("ROOT pair", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -967716604, "CC(remember):KnownStableCallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      KnownStableCallArgument(currentMsCall(1 to 1), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    PairOfCallDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
private fun KnownStableCallArgument(value: Any, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(756989066)
  sourceInformation($composer, "C(KnownStableCallArgument)N(value)196@5914L66:KnownStableCallArguments.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(756989066, $dirty, -1, "boo.kodeeverse.composemagic.stability.KnownStableCallArgument (KnownStableCallArguments.kt:195)")
    }
    CurrentMsText("KnownStableCallArgument", null, null, value as Long, $composer, 0b0110 or 0b0001110000000000 and $dirty shl 0b1001, 0b0110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    KnownStableCallArgument(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Stable
private fun currentMsCall(value: Any): Long {
  return currentTimeMillis() + value.hashCode()
}