@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun StableCallArgumentDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1896857088)
  sourceInformation($composer, "C(StableCallArgumentDemo)30@1220L33,32@1257L556:CallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1896857088, $changed, -1, "boo.kodeeverse.composemagic.stability.StableCallArgumentDemo (CallArguments.kt:29)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 1813529569, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 1588622653, "C37@1429L32,42@1581L11,38@1466L253,47@1724L53,49@1783L26:CallArguments.kt#b558il")
      CurrentMsText("ROOT stableCall", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -2026959595, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      CallArgument(stableCall(), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableCallArgumentDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun StableCallWithUnstableTypeArgumentDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1824233612)
  sourceInformation($composer, "C(StableCallWithUnstableTypeArgumentDemo)54@1891L33,56@1928L602:CallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1824233612, $changed, -1, "boo.kodeeverse.composemagic.stability.StableCallWithUnstableTypeArgumentDemo (CallArguments.kt:53)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -741842347, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1153089317, "C61@2100L48,66@2268L11,62@2153L253,71@2411L53,73@2470L56:CallArguments.kt#b558il")
      CurrentMsText("ROOT stableCallWithUnstableType", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1763923849, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      CallArgument(stableCallWithUnstableTypeParameter(), $composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableCallWithUnstableTypeArgumentDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun UnstableCallArgumentDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(947806617)
  sourceInformation($composer, "C(UnstableCallArgumentDemo)78@2594L33,80@2631L560:CallArguments.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(947806617, $changed, -1, "boo.kodeeverse.composemagic.stability.UnstableCallArgumentDemo (CallArguments.kt:77)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 309093754, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1788028416, "C85@2803L34,90@2957L11,86@2842L253,95@3100L53,97@3159L28:CallArguments.kt#b558il")
      CurrentMsText("ROOT unstableCall", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -1027505106, "CC(remember):CallArguments.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      CallArgument(unstableCall(), $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableCallArgumentDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
private fun CallArgument(value: Any, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(516058164)
  sourceInformation($composer, "C(CallArgument)N(value)102@3248L55:CallArguments.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(516058164, $dirty, -1, "boo.kodeeverse.composemagic.stability.CallArgument (CallArguments.kt:101)")
    }
    CurrentMsText("CallArgument", null, null, value as Long, $composer, 0b0110 or 0b0001110000000000 and $dirty shl 0b1001, 0b0110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    CallArgument(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Stable
private fun stableCall(): Long {
  return currentTimeMillis()
}
@Stable
private fun <T> stableCallWithUnstableTypeParameter(): Long {
  return currentTimeMillis()
}
private fun unstableCall(): Long {
  return currentTimeMillis()
}