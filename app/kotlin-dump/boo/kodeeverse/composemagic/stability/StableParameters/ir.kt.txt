@Stable
private interface StableInterface 
@Stable
private class StableClass2 : StableInterface 
private class UnstableClass : StableInterface {
  var a: Any = Any()
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun MutableButSameInstanceArgumentInUnstableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1917794010)
  sourceInformation($composer, "C(MutableButSameInstanceArgumentInUnstableParameterDemo)39@1493L33,40@1540L29,42@1573L685:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1917794010, $changed, -1, "boo.kodeeverse.composemagic.stability.MutableButSameInstanceArgumentInUnstableParameterDemo (StableParameters.kt:38)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -459071129, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    val list = <block>{
      sourceInformationMarkerStart($composer, -459069629, "CC(remember):StableParameters.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        mutableListOf(0)
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 1432216182, "C47@1745L150,56@2015L53,52@1900L271,63@2176L53,65@2235L19:StableParameters.kt#b558il")
      Text("ROOT mutableButSameInstanceArgumentInUnstableParameter
      ${"(${list.joinToString()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111101111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -923622619, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache($composer.changedInstance(list)) {
          {
            <get-count>()++
            list += <get-count>()
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      ListParameter(list, $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    MutableButSameInstanceArgumentInUnstableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun StableArgumentInUnstableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1143489323)
  sourceInformation($composer, "C(StableArgumentInUnstableParameterDemo)70@2335L33,72@2372L670:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1143489323, $changed, -1, "boo.kodeeverse.composemagic.stability.StableArgumentInUnstableParameterDemo (StableParameters.kt:69)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -618386388, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 652875904, "C79@2613L25,77@2544L163,86@2827L11,82@2712L229,90@2946L53,92@3005L33:StableParameters.kt#b558il")
      Text("ROOT stableArgumentInUnstableParameter
      ${"@ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111101111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -2057140896, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      UnstableParameter(StableClass2(), $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableArgumentInUnstableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun StableArgumentInStableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(517728978)
  sourceInformation($composer, "C(StableArgumentInStableParameterDemo)97@3117L33,99@3154L666:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(517728978, $changed, -1, "boo.kodeeverse.composemagic.stability.StableArgumentInStableParameterDemo (StableParameters.kt:96)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -678656557, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 805675133, "C106@3393L25,104@3326L161,113@3607L11,109@3492L229,117@3726L53,119@3785L31:StableParameters.kt#b558il")
      Text("ROOT stableArgumentInStableParameter
      ${"@ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111101111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1827113351, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      StableParameter(StableClass2(), $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableArgumentInStableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun UnstableArgumentInStableParameterDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1473627029)
  sourceInformation($composer, "C(UnstableArgumentInStableParameterDemo)124@3897L33,126@3934L667:StableParameters.kt#b558il")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1473627029, $changed, -1, "boo.kodeeverse.composemagic.stability.UnstableArgumentInStableParameterDemo (StableParameters.kt:123)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 1183634796, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 680957667, "C133@4173L25,131@4106L161,140@4387L11,136@4272L229,144@4506L53,146@4565L32:StableParameters.kt#b558il")
      Text("ROOT stableArgumentInStableParameter
      ${"@ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111101111111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -255119776, "CC(remember):StableParameters.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      StableParameter(UnstableClass(), $composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableArgumentInStableParameterDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
private fun ListParameter(value: List<*>, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-2115174439)
  sourceInformation($composer, "C(ListParameter)N(value)151@4663L124:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-2115174439, $dirty, -1, "boo.kodeeverse.composemagic.stability.ListParameter (StableParameters.kt:150)")
    }
    Text("ListParameter (${value.joinToString()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    ListParameter(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
private fun UnstableParameter(value: Any, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(730427067)
  sourceInformation($composer, "C(UnstableParameter)N(value)160@4881L25,159@4849L241:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changedInstance(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(730427067, $dirty, -1, "boo.kodeeverse.composemagic.stability.UnstableParameter (StableParameters.kt:158)")
    }
    Text("${"UnstableParameter @ ${<get-currentRecomposeScopeHash>($composer, 0)}
    "}${"(${currentTimeMillis()})
    "}${"(${val tmp1_elvis_lhs = <block>{
      value as List<*>??.joinToString()
    }
    when {
      tmp1_elvis_lhs == null -> {
        value.hashCode()
      }
      else -> {
        tmp1_elvis_lhs
      }
    }
    })"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    UnstableParameter(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
private fun StableParameter(value: StableInterface, $composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(685616582)
  sourceInformation($composer, "C(StableParameter)N(value)172@5207L25,171@5177L120:StableParameters.kt#b558il")
  val $dirty = $changed
  if ($changed and 0b0110 == 0) {
    $dirty = $dirty or if ($composer.changed(value)) 0b0100 else 0b0010
  }
  if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(685616582, $dirty, -1, "boo.kodeeverse.composemagic.stability.StableParameter (StableParameters.kt:168)")
    }
    used(value)
    Text("StableParameter @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    StableParameter(value, $composer, updateChangedFlags($changed or 0b0001))
  }
}