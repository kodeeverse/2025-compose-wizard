@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun ReturnValueComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1316367892)
  sourceInformation($composer, "C(ReturnValueComposableDemo)29@1199L329:ReturnValueComposable.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1316367892, $changed, -1, "boo.kodeeverse.composemagic.restartability.ReturnValueComposableDemo (ReturnValueComposable.kt:28)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1061268180, "C34@1385L25,34@1371L66,35@1442L53,37@1501L23:ReturnValueComposable.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      ReturnValueComposable($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    ReturnValueComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
private fun ReturnValueComposable($composer: Composer?, $changed: Int): Int {
  sourceInformationMarkerStart($composer, -60095794, "C(ReturnValueComposable)42@1602L33,45@1675L25,44@1639L126,52@1875L11,48@1768L215:ReturnValueComposable.kt#5mdrpd")
  if (isTraceInProgress()) {
    traceEventStart(-60095794, $changed, -1, "boo.kodeeverse.composemagic.restartability.ReturnValueComposable (ReturnValueComposable.kt:41)")
  }
  var count by {
    val count$delegate = <block>{
      sourceInformationMarkerStart($composer, -1917481553, "CC(remember):ReturnValueComposable.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        mutableIntStateOf(0)
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    }
    get() {
      return count$delegate.getValue(null, ::count$delegate)
    }
    set(<set-?>: Int) {
      return count$delegate.setValue(null, ::count$delegate, <set-?>)
    }
  }
  Text("ReturnValueComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
  Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
    onClick = sourceInformationMarkerStart($composer, -1917472839, "CC(remember):ReturnValueComposable.kt#9igjgp")
    val tmp2_group = $composer.cache(false) {
      {
        <get-count>()++
      }
    }
    sourceInformationMarkerEnd($composer)
    tmp2_group
  ).background(
    color = Companion.Green
  ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
  val tmp0 = 0
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  sourceInformationMarkerEnd($composer)
  return tmp0
}