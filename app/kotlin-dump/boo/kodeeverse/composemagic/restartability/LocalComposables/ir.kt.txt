interface FunctionalComposable {
  @Composable
  abstract fun Content($composer: Composer?, $changed: Int) 
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun LocalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1073667141)
  sourceInformation($composer, "C(LocalComposableDemo)30@1158L671:LocalComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1073667141, $changed, -1, "boo.kodeeverse.composemagic.restartability.LocalComposableDemo (LocalComposables.kt:29)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 789114211, "C35@1330L21,36@1356L53,53@1818L7:LocalComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      @Composable
      @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
      fun Local($composer: Composer?, $changed: Int) {
        sourceInformationMarkerStart($composer, 1799231044, "C(Local)39@1460L33,41@1501L29,46@1660L11,42@1537L269:LocalComposables.kt#5mdrpd")
        if (isTraceInProgress()) {
          traceEventStart(1799231044, $changed, -1, "boo.kodeeverse.composemagic.restartability.LocalComposableDemo.<anonymous>.Local (LocalComposables.kt:38)")
        }
        var count by {
          val count$delegate = <block>{
            sourceInformationMarkerStart($composer, -1810785915, "CC(remember):LocalComposables.kt#9igjgp")
            val tmp0_group = $composer.cache(false) {
              mutableIntStateOf(0)
            }
            sourceInformationMarkerEnd($composer)
            tmp0_group
          }
          get() {
            return count$delegate.getValue(null, ::count$delegate)
          }
          set(<set-?>: Int) {
            return count$delegate.setValue(null, ::count$delegate, <set-?>)
          }
        }
        CurrentMsText("LocalContent", null, null, null, $composer, 0b0110, 0b1110)
        Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
          onClick = sourceInformationMarkerStart($composer, -1810779537, "CC(remember):LocalComposables.kt#9igjgp")
          val tmp1_group = $composer.cache(false) {
            {
              <get-count>()++
            }
          }
          sourceInformationMarkerEnd($composer)
          tmp1_group
        ).background(
          color = Companion.Green
        ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
        if (isTraceInProgress()) {
          traceEventEnd()
        }
        sourceInformationMarkerEnd($composer)
      }
      Local($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    LocalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun LocalFunctionalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(96958238)
  sourceInformation($composer, "C(LocalFunctionalComposableDemo)58@1885L698:LocalComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(96958238, $changed, -1, "boo.kodeeverse.composemagic.restartability.LocalFunctionalComposableDemo (LocalComposables.kt:57)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 475662821, "C63@2057L21,64@2083L53,81@2570L9:LocalComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      val local = <block>{
        class <no name provided> : FunctionalComposable {
          @Composable
          @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
          override fun Content($composer: Composer?, $changed: Int) {
            $composer = $composer.startRestartGroup(-848475088)
            sourceInformation($composer, "C(Content)67@2196L33,69@2237L39,74@2406L11,70@2283L269:LocalComposables.kt#5mdrpd")
            val $dirty = $changed
            if ($changed and 0b0110 == 0) {
              $dirty = $dirty or if ($composer.changed(<this>)) 0b0100 else 0b0010
            }
            if ($composer.shouldExecute($dirty and 0b0011 != 0b0010, $dirty and 0b0001)) {
              if (isTraceInProgress()) {
                traceEventStart(-848475088, $dirty, -1, "boo.kodeeverse.composemagic.restartability.LocalFunctionalComposableDemo.<anonymous>.<no name provided>.Content (LocalComposables.kt:67)")
              }
              var count by {
                val count$delegate = <block>{
                  sourceInformationMarkerStart($composer, 659227377, "CC(remember):LocalComposables.kt#9igjgp")
                  val tmp0_group = $composer.cache(false) {
                    mutableIntStateOf(0)
                  }
                  sourceInformationMarkerEnd($composer)
                  tmp0_group
                }
                get() {
                  return count$delegate.getValue(null, ::count$delegate)
                }
                set(<set-?>: Int) {
                  return count$delegate.setValue(null, ::count$delegate, <set-?>)
                }
              }
              CurrentMsText("LocalFunctionalContent", null, null, null, $composer, 0b0110, 0b1110)
              Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
                onClick = sourceInformationMarkerStart($composer, 659234075, "CC(remember):LocalComposables.kt#9igjgp")
                val tmp1_group = $composer.cache(false) {
                  {
                    <get-count>()++
                  }
                }
                sourceInformationMarkerEnd($composer)
                tmp1_group
              ).background(
                color = Companion.Green
              ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
              if (isTraceInProgress()) {
                traceEventEnd()
              }
            } else {
              $composer.skipToGroupEnd()
            }
            val tmp2_rcvr = <this>
            $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
              tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
            }
          }
        }
        <no name provided>()
      }
      local.Content($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    LocalFunctionalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}