private interface IVirtualComposable {
  @Composable
  abstract fun Content($composer: Composer?, $changed: Int) 
}
private abstract class AbstractVirtualComposable {
  @Composable
  abstract fun Content($composer: Composer?, $changed: Int) 
}
private open class OpenVirtualComposable {
  @Composable
  open fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(-799435069)
    sourceInformation($composer, "C(Content):VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(-799435069, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenVirtualComposable.Content (VirtualComposables.kt:38)")
    }
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun IFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(799584345)
  sourceInformation($composer, "C(IFinalComposableDemo)42@1494L369:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(799584345, $changed, -1, "boo.kodeeverse.composemagic.restartability.IFinalComposableDemo (VirtualComposables.kt:41)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 1611156383, "C47@1680L25,47@1666L66,48@1737L53,50@1796L53,50@1850L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1714544792, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        IFinalComposable() as IVirtualComposable
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    IFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun IOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-136505213)
  sourceInformation($composer, "C(IOpenComposableDemo)55@1909L368:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-136505213, $changed, -1, "boo.kodeeverse.composemagic.restartability.IOpenComposableDemo (VirtualComposables.kt:54)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1474595734, "C60@2095L25,60@2081L66,61@2152L53,63@2211L52,63@2264L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1476457069, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        IOpenComposable() as IVirtualComposable
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    IOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun AbstractFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1315051236)
  sourceInformation($composer, "C(AbstractFinalComposableDemo)68@2331L354:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1315051236, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractFinalComposableDemo (VirtualComposables.kt:67)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 505471671, "C73@2517L25,73@2503L66,74@2574L53,76@2633L38,76@2672L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, -1784805760, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        AbstractFinalComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    AbstractFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun AbstractOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(711406744)
  sourceInformation($composer, "C(AbstractOpenComposableDemo)81@2738L353:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(711406744, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractOpenComposableDemo (VirtualComposables.kt:80)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -678979440, "C86@2924L25,86@2910L66,87@2981L53,89@3040L37,89@3078L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1779216775, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        AbstractOpenComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    AbstractOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun OpenFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-972470084)
  sourceInformation($composer, "C(OpenFinalComposableDemo)94@3141L350:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-972470084, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenFinalComposableDemo (VirtualComposables.kt:93)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -2078443933, "C99@3327L25,99@3313L66,100@3384L53,102@3443L34,102@3478L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, -1591063212, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        OpenFinalComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    OpenFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun OpenOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1163499584)
  sourceInformation($composer, "C(OpenOpenComposableDemo)107@3540L349:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1163499584, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenOpenComposableDemo (VirtualComposables.kt:106)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -485237012, "C112@3726L25,112@3712L66,113@3783L53,115@3842L33,115@3876L9:VirtualComposables.kt#5mdrpd")
      Text("ROOT @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 2062561195, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        OpenOpenComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    OpenOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
private class IFinalComposable : IVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1738028311)
    sourceInformation($composer, "C(Content)121@4009L33,124@4081L25,123@4048L127,131@4295L11,127@4180L229:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1738028311, $changed, -1, "boo.kodeeverse.composemagic.restartability.IFinalComposable.Content (VirtualComposables.kt:120)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, -497070184, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      Text("IFinalComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -497061054, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class IOpenComposable : IVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(674267061)
    sourceInformation($composer, "C(Content)140@4536L33,143@4607L25,142@4575L126,150@4821L11,146@4706L229:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(674267061, $changed, -1, "boo.kodeeverse.composemagic.restartability.IOpenComposable.Content (VirtualComposables.kt:139)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -569414986, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Text("IOpenComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)} (${currentTimeMillis()})", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111111110111110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, -569405888, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
private class AbstractFinalComposable : AbstractVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1069783382)
    sourceInformation($composer, "C(Content)159@5075L33,162@5154L25,161@5114L184,171@5418L11,167@5303L229:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1069783382, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractFinalComposable.Content (VirtualComposables.kt:158)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, 1564647447, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      Text("${"AbstractFinalComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)}
      "}${"(${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1564658401, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class AbstractOpenComposable : AbstractVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(1761089430)
    sourceInformation($composer, "C(Content)180@5675L33,183@5753L25,182@5714L183,192@6017L11,188@5902L229:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(1761089430, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractOpenComposable.Content (VirtualComposables.kt:179)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 189828695, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Text("${"AbstractOpenComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)}
    "}${"(${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, 189839617, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
private class OpenFinalComposable : OpenVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1007162926)
    sourceInformation($composer, "C(Content)201@6263L33,204@6338L25,203@6302L180,213@6602L11,209@6487L229:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1007162926, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenFinalComposable.Content (VirtualComposables.kt:200)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, 1515931375, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      Text("${"OpenFinalComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)}
      "}${"(${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1515942201, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class OpenOpenComposable : OpenVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(373596094)
    sourceInformation($composer, "C(Content)222@6851L33,225@6925L25,224@6890L179,234@7189L11,230@7074L229:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(373596094, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenOpenComposable.Content (VirtualComposables.kt:221)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1751405441, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    Text("${"OpenOpenComposable @ ${<get-currentRecomposeScopeHash>($composer, 0)}
    "}${"(${currentTimeMillis()})"}", null, <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, Companion.Bold, null, <unsafe-coerce>(0L), null, Companion.Center, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b000110000000000000000000, 0, 0b00111111101110111110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, -1751394647, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, <unsafe-coerce>(0L), null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0, 0, 0b00111111111111111100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}