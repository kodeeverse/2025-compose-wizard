private interface IVirtualComposable {
  @Composable
  abstract fun Content($composer: Composer?, $changed: Int) 
}
private abstract class AbstractVirtualComposable {
  @Composable
  abstract fun Content($composer: Composer?, $changed: Int) 
}
private open class OpenVirtualComposable {
  @Composable
  open fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(-799435069)
    sourceInformation($composer, "C(Content):VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(-799435069, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenVirtualComposable.Content (VirtualComposables.kt:36)")
    }
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun IFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(799584345)
  sourceInformation($composer, "C(IFinalComposableDemo)40@1379L324:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(799584345, $changed, -1, "boo.kodeeverse.composemagic.restartability.IFinalComposableDemo (VirtualComposables.kt:39)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 1611154988, "C45@1551L21,46@1577L53,48@1636L53,48@1690L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1714543352, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        IFinalComposable() as IVirtualComposable
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    IFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun IOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-136505213)
  sourceInformation($composer, "C(IOpenComposableDemo)53@1749L323:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-136505213, $changed, -1, "boo.kodeeverse.composemagic.restartability.IOpenComposableDemo (VirtualComposables.kt:52)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -1474597129, "C58@1921L21,59@1947L53,61@2006L52,61@2059L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1476455629, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        IOpenComposable() as IVirtualComposable
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    IOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun AbstractFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(1315051236)
  sourceInformation($composer, "C(AbstractFinalComposableDemo)66@2126L309:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(1315051236, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractFinalComposableDemo (VirtualComposables.kt:65)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, 505470276, "C71@2298L21,72@2324L53,74@2383L38,74@2422L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, -1784807200, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        AbstractFinalComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    AbstractFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun AbstractOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(711406744)
  sourceInformation($composer, "C(AbstractOpenComposableDemo)79@2488L308:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(711406744, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractOpenComposableDemo (VirtualComposables.kt:78)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -678980835, "C84@2660L21,85@2686L53,87@2745L37,87@2783L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 1779215335, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        AbstractOpenComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    AbstractOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun OpenFinalComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-972470084)
  sourceInformation($composer, "C(OpenFinalComposableDemo)92@2846L305:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-972470084, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenFinalComposableDemo (VirtualComposables.kt:91)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -2078445328, "C97@3018L21,98@3044L53,100@3103L34,100@3138L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, -1591064652, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        OpenFinalComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    OpenFinalComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
@Composable
@ComposableTarget(applier = "androidx.compose.ui.UiComposable")
fun OpenOpenComposableDemo($composer: Composer?, $changed: Int) {
  $composer = $composer.startRestartGroup(-1163499584)
  sourceInformation($composer, "C(OpenOpenComposableDemo)105@3200L304:VirtualComposables.kt#5mdrpd")
  if ($composer.shouldExecute($changed != 0, $changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(-1163499584, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenOpenComposableDemo (VirtualComposables.kt:104)")
    }
    Column(Companion.wrapContentSize(), Arrangement.spacedBy(10.dp), Companion.CenterHorizontally, { $composer: Composer?, $changed: Int ->
      sourceInformationMarkerStart($composer, -485238407, "C110@3372L21,111@3398L53,113@3457L33,113@3491L9:VirtualComposables.kt#5mdrpd")
      CurrentMsText("ROOT", null, null, null, $composer, 0b0110, 0b1110)
      HorizontalDivider(Companion.fillMaxWidth(), <unsafe-coerce>(0.0f), <unsafe-coerce>(0L), $composer, 0b0110, 0b0110)
      sourceInformationMarkerStart($composer, 2062559755, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp0_group = $composer.cache(false) {
        OpenOpenComposable()
      }
      sourceInformationMarkerEnd($composer)
      tmp0_group.Content($composer, 0b0110)
      sourceInformationMarkerEnd($composer)
    }, $composer, 0b000110110110, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    $composer.skipToGroupEnd()
  }
  $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
    OpenOpenComposableDemo($composer, updateChangedFlags($changed or 0b0001))
  }
}
private class IFinalComposable : IVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1738028311)
    sourceInformation($composer, "C(Content)119@3624L33,121@3663L30,126@3813L11,122@3698L253:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1738028311, $changed, -1, "boo.kodeeverse.composemagic.restartability.IFinalComposable.Content (VirtualComposables.kt:118)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, -497070184, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      CurrentMsText("IFinalContent", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, -497064158, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class IOpenComposable : IVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(674267061)
    sourceInformation($composer, "C(Content)136@4078L33,138@4117L29,143@4266L11,139@4151L253:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(674267061, $changed, -1, "boo.kodeeverse.composemagic.restartability.IOpenComposable.Content (VirtualComposables.kt:135)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -569414986, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    CurrentMsText("IOpenContent", null, null, null, $composer, 0b0110, 0b1110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, -569408992, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
private class AbstractFinalComposable : AbstractVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1069783382)
    sourceInformation($composer, "C(Content)153@4544L33,155@4583L37,160@4740L11,156@4625L253:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1069783382, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractFinalComposable.Content (VirtualComposables.kt:152)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, 1564647447, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      CurrentMsText("AbstractFinalContent", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1564653697, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class AbstractOpenComposable : AbstractVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(1761089430)
    sourceInformation($composer, "C(Content)170@5021L33,172@5060L36,177@5216L11,173@5101L253:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(1761089430, $changed, -1, "boo.kodeeverse.composemagic.restartability.AbstractOpenComposable.Content (VirtualComposables.kt:169)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, 189828695, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    CurrentMsText("AbstractOpenContent", null, null, null, $composer, 0b0110, 0b1110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, 189834913, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}
private class OpenFinalComposable : OpenVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer = $composer.startRestartGroup(1007162926)
    sourceInformation($composer, "C(Content)187@5486L33,189@5525L33,194@5678L11,190@5563L253:VirtualComposables.kt#5mdrpd")
    if ($composer.shouldExecute($changed and 0b0001 != 0, $changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(1007162926, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenFinalComposable.Content (VirtualComposables.kt:186)")
      }
      var count by {
        val count$delegate = <block>{
          sourceInformationMarkerStart($composer, 1515931375, "CC(remember):VirtualComposables.kt#9igjgp")
          val tmp0_group = $composer.cache(false) {
            mutableIntStateOf(0)
          }
          sourceInformationMarkerEnd($composer)
          tmp0_group
        }
        get() {
          return count$delegate.getValue(null, ::count$delegate)
        }
        set(<set-?>: Int) {
          return count$delegate.setValue(null, ::count$delegate, <set-?>)
        }
      }
      CurrentMsText("OpenFinalContent", null, null, null, $composer, 0b0110, 0b1110)
      Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
        onClick = sourceInformationMarkerStart($composer, 1515937497, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp1_group = $composer.cache(false) {
          {
            <get-count>()++
          }
        }
        sourceInformationMarkerEnd($composer)
        tmp1_group
      ).background(
        color = Companion.Green
      ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      $composer.skipToGroupEnd()
    }
    val tmp2_rcvr = <this>
    $composer.endRestartGroup()?.updateScope { $composer: Composer?, $force: Int ->
      tmp2_rcvr.Content($composer, updateChangedFlags($changed or 0b0001))
    }
  }
}
private open class OpenOpenComposable : OpenVirtualComposable {
  @Composable
  @ComposableTarget(applier = "androidx.compose.ui.UiComposable")
  override fun Content($composer: Composer?, $changed: Int) {
    $composer.startReplaceGroup(373596094)
    sourceInformation($composer, "C(Content)204@5951L33,206@5990L32,211@6142L11,207@6027L253:VirtualComposables.kt#5mdrpd")
    if (isTraceInProgress()) {
      traceEventStart(373596094, $changed, -1, "boo.kodeeverse.composemagic.restartability.OpenOpenComposable.Content (VirtualComposables.kt:203)")
    }
    var count by {
      val count$delegate = <block>{
        sourceInformationMarkerStart($composer, -1751405441, "CC(remember):VirtualComposables.kt#9igjgp")
        val tmp0_group = $composer.cache(false) {
          mutableIntStateOf(0)
        }
        sourceInformationMarkerEnd($composer)
        tmp0_group
      }
      get() {
        return count$delegate.getValue(null, ::count$delegate)
      }
      set(<set-?>: Int) {
        return count$delegate.setValue(null, ::count$delegate, <set-?>)
      }
    }
    CurrentMsText("OpenOpenContent", null, null, null, $composer, 0b0110, 0b1110)
    Text("count: ${<get-count>()}", Companion.clip(RoundedCornerShape(10.dp)).clickable(
      onClick = sourceInformationMarkerStart($composer, -1751399351, "CC(remember):VirtualComposables.kt#9igjgp")
      val tmp1_group = $composer.cache(false) {
        {
          <get-count>()++
        }
      }
      sourceInformationMarkerEnd($composer)
      tmp1_group
    ).background(
      color = Companion.Green
    ).padding(20.dp, 10.dp), <unsafe-coerce>(0L), null, 20.sp, null, null, null, <unsafe-coerce>(0L), null, null, <unsafe-coerce>(0L), <unsafe-coerce>(0), false, 0, 0, null, null, $composer, 0b0110000000000000, 0, 0b00111111111111101100)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
    $composer.endReplaceGroup()
  }
}